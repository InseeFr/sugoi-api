name: Sugoi API Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of the release"
        required: true

jobs:
  pre-release:
    name: pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Prepare
        run: |
          git config --global user.name "Insee - Domaine Outils Transverses"
          git config --global user.email "dg75-dsi-domaine-outils-transverses@insee.fr"  
          git clone https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{github.repository}}.git
          cd sugoi-api/
          git checkout ${{ github.ref_name }}
          git fetch --tags
          git checkout -b release-${{ github.event.inputs.version }}
          mvn -B versions:set -DnewVersion=${{ github.event.inputs.version }}  -DgenerateBackupPoms=false
          echo -e "# ${{ github.event.inputs.version }} \n\n" >> changelog.tmp
          git log --pretty=format:"- %s" `git tag --sort=-committerdate | head -1`...@ >> changelog.tmp
          echo -e "\n\n" >> changelog.tmp
          cat CHANGELOG.md >> changelog.tmp
          mv changelog.tmp CHANGELOG.md
          mvn -B spotless:apply
          git add .
          git commit -sm "[REL] :rocket: release version ${{ github.event.inputs.version }}"
          git push origin release-${{ github.event.inputs.version }} -f
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          echo "PR_URL=$(gh pr create --fill --base test-gh)" >> $GITHUB_ENV

  release:
    name: release
    runs-on: ubuntu-latest
    needs: pre-release
    steps:
      - name: Clone Deployments repo
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}
          ref: release-${{ github.event.inputs.version }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build with Maven
        run: |
          mvn -B clean install 
          cd sugoi-api-distribution/sugoi-api-distribution-jar/
          mvn -B assembly:single

      - name: Create a release
        id: create_release
        run: |
          echo ::set-output name=upload_url::$(curl --request POST \
          --header "Accept: application/vnd.github.v3+json" \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --url https://api.github.com/repos/${{ github.repository }}/releases \
          -d '{"tag_name":"${{ github.event.inputs.version }}", "target_commitish":"release-${{ github.event.inputs.version }}", "name": "V${{ github.event.inputs.version }}", "body":"[CHANGELOG](https://github.com/InseeFrLab/sugoi-api/blob/${{ github.event.inputs.version }}/CHANGELOG.md)"}' | jq '.upload_url' | cut -d { -f 1)

      - name: Upload Jar Release
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh release upload --repo ${{ github.repository }} "${{ github.event.inputs.version }}" \
          ./sugoi-api-distribution/sugoi-api-distribution-jar/target/sugoi-api.zip

      - name: Upload War Release
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh release upload --repo ${{ github.repository }} "${{ github.event.inputs.version }}" \
          ./sugoi-api-distribution/sugoi-api-distribution-war/target/sugoi-api.war

  after-release:
    name: after-release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          git config --global user.name "Insee - Domaine Outils Transverses"
          git config --global user.email "dg75-dsi-domaine-outils-transverses@insee.fr"  
          git clone https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{github.repository}}.git
          cd sugoi-api/
          git checkout release-${{ github.event.inputs.version }}
          git pull
          old_version=${{ github.event.inputs.version }}
          new_version=$(echo $old_version | cut -d. -f1).$(($(echo $old_version | cut -d. -f2) + 1)).0
          mvn -B versions:set -DnewVersion=$new_version-SNAPSHOT -DgenerateBackupPoms=false
          git add .
          git commit -sm "[REL] :rocket: prepare next version"
          git push origin release-${{ github.event.inputs.version }}
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          echo prurl : "${{env.PR_URL}}"
          gh pr merge "${{env.PR_URL}}"
